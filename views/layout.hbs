<!DOCTYPE html>
<html>
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
    <title>Babylon Template</title>
    <style>
        html, body {
            overflow: hidden;
            width: 100%;
            height: 100%;
            margin: 0;
            padding: 0;
        }
        #renderCanvas {
            width: 100%;
            height: 100%;
            touch-action: none;
        }
    </style>
    <script src="https://cdn.babylonjs.com/babylon.js"></script>
    <script src="https://cdn.babylonjs.com/loaders/babylonjs.loaders.min.js"></script>
    <script src="https://code.jquery.com/pep/0.4.3/pep.js"></script>
  </head>

  <body>
      <canvas id="renderCanvas" touch-action="none"></canvas>

      <script>
        var createScene = function() {
          // Initialize Scene
          const scene = new BABYLON.Scene(engine);

          // Camera
          const camera = new BABYLON.ArcRotateCamera("camera", -Math.PI / 2, Math.PI / 2.5, 3, new BABYLON.Vector3(0, 0, 0));
          camera.attachControl(canvas, true);
          camera.lowerRadiusLimit = 2; //The upper limit of the camera's reduced radius limits the distance of the camera from the focus
          camera.upperRadiusLimit = 10; //The upper limit of camera magnification radius upperRadiusLimit should not be less than lowerRadiusLimit to avoid errors or ineffectiveness.
          camera.wheelDeltaPercentage = 0.09; //Mouse wheel sensitivity
          camera.checkCollisions = true; // Turn on the collision between perspective and scene objects
          camera.upperBetaLimit = (Math.PI / 2) * 0.9; // Maximum beta angle of viewing angle
          camera.lowerRadiusLimit = 5; // Minimum distance of viewing angle
          camera.upperRadiusLimit = 1000; // Maximum distance of viewing angle
          camera.radius = 10; // Initialize the viewing angle distance

          camera.useAutoRotationBehavior = true;
          camera.autoRotationBehavior.idleRotationSpeed = 0.2;

          camera.useFramingBehavior = true;
          camera.framingBehavior.radiusScale = 2;


          // Lighting
          const light = new BABYLON.HemisphericLight("light", new BABYLON.Vector3(0, 1, 0));

          // Ground
          const ground = BABYLON.MeshBuilder.CreateGround("ground", {width:10, height:10});
          const groundMat = new BABYLON.StandardMaterial("groundMat");
          groundMat.diffuseColor = new BABYLON.Color3(0, 1, 0);
          ground.material = groundMat; //Place the material property of the ground

          // Box
          const box = BABYLON.MeshBuilder.CreateBox("box", {});
          box.position.y = 0.5;
          const boxMat = new BABYLON.StandardMaterial("boxMat");
          boxMat.diffuseTexture = new BABYLON.Texture("https://www.babylonjs-playground.com/textures/floor.png")
          box.material = boxMat;

          const roof = BABYLON.MeshBuilder.CreateCylinder("roof", {diameter: 1.3, height: 1.2, tessellation: 3});
          roof.scaling.x = 0.75;
          roof.rotation.z = Math.PI / 2;
          roof.position.y = 1.22;
          const roofMat = new BABYLON.StandardMaterial("roofMat");
          roofMat.diffuseTexture = new BABYLON.Texture("https://assets.babylonjs.com/environments/roof.jpg", scene);
          roof.material = roofMat;

          camera.setTarget(box);

          return scene;
        };

        const canvas = document.getElementById("renderCanvas"); // Get the canvas element
        const engine = new BABYLON.Engine(canvas, true); // Generate the BABYLON 3D engine
        // Add your code here matching the playground format
        const scene = createScene(); //Call the createScene function
        // Register a render loop to repeatedly render the scene
        engine.runRenderLoop(function () {
                scene.render();
        });
        // Watch for browser/canvas resize events
        window.addEventListener("resize", function () {
                engine.resize();
        });
      </script>
  </body>
</html>
